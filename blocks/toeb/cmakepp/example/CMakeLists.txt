cmake_minimum_required(VERSION 2.8)
# include standalone version of oo-cmake
# when not using cutil this  includes the function files as well as
# the dependent functions
include("../cmakepp.cmake")

message("creating a simple inheritance example")

#create animal object
obj_new()
ans(animal)

# set object method eat
# this method prints out which food the animal is eating
# existing functions can also be appliead via obj_bindcall(${ref} func arg1 arg2 arg3)
obj_setfunction(
	${animal}  	#reference to animal object
	" function( eat ) \n obj_get(\${this}  food) \n ans(food) \n message(\"I am eating \${food}\") \n	 endfunction()"
)


# create mamal object
new()
ans(mamal)
obj_setprototype(${mamal} ${animal})

#create bird object
new()					#create instance
ans(bird)
obj_setprototype(${bird} ${animal})	#set prototype animal
obj_set(${bird} food Birdfood)		#set bird's food property to "Birdfood"

#create dog object
new()						#create instance
ans(dog)
obj_setprototype(${dog} ${mamal})	#set prototype mamal
obj_set(${dog} food Dogfood)		#set dogs food property to "Dogfood"

#create cat object
new()						#create instance
ans(cat)
obj_setprototype(${cat} ${mamal})	#set prototype mamal
obj_set(${cat} food Catfood)		#set cat's food property to "Catfood"


# call eat function for different objects
call(bird.eat())
call(dog.eat())
call(cat.eat())

#output should be
#I am eating Birdfood
#I am eating Dogfood
#I am eating Catfood
