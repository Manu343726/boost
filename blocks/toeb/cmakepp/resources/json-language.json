{
  "name":"json",
  "parsers":{
    "token":"ast_parse_token",
    "any":"ast_parse_any",
    "sequence":"ast_parse_sequence",
    "list":"ast_parse_list",
    "empty":"ast_parse_empty"
  },
  "evaluators":{
    "string":"ast_json_eval_string",
    "number":"ast_json_eval_number",
    "boolean":"ast_json_eval_boolean",
    "null":"ast_json_eval_null",
    "key_value":"ast_json_eval_key_value",
    "object":"ast_json_eval_object",
    "array":"ast_json_eval_array"
  },
  "root_definition":"json",
  "definitions":{
    "json":{
      "parser":"any",
      "any":[
        "object",
        "array"
      ]
    },
    "object":{
      "parser":"list",
      "node":"true",
      "begin":"brace_open",
      "element":"key_value",
      "separator":"comma",
      "end":"brace_close"
    },
    "array":{
      "parser":"list",
      "node":"true",
      "begin":"bracket_open",
      "element":"value",
      "separator":"comma",
      "end":"bracket_close"
    },
    "brace_open":{
      "parser":"token",
      "match":"{"
    },
    "brace_close":{
      "parser":"token",
      "match":"}"
    },
    "bracket_close":{
      "parser":"token",
      "match":"]"
    },
    "bracket_open":{
      "parser":"token",
      "match":"["
    },
    "nothing":{
      "parser":"empty",
      "empty":"true"
    },   
    "key_value":{
      "parser":"sequence",
      "node":"true",
      "sequence":[
        "string",
        "colon",
        "value"
      ]
    },   
    "colon":{
      "parser":"token",
      "match":":"
    },
    "comma":{
      "parser":"token",
      "match":","
    },
    "value":{
      "parser":"any",
      "any":[
        "string",
        "number",
        "object",
        "array",
        "boolean",
        "null"
      ]
    },
    "string":{
      "parser":"token",
      "node":"true",
      "regex":"\"(([^\"]|\\|\\\")*)\"",
      "replace":"1"   
    },
    "number":{
      "parser":"token",
      "node":"true",
      "regex":"([1-9][0-9]*)([.][0-9]+([eE][+-]?[0-9]+)?)?",
      "replace":"1"
    },
    "boolean":{
      "parser":"token",
      "node":"true",
      "regex":"true|false"
    },
    "null":{
      "parser":"token",
      "node":"true",
      "match":"null"
    },
    "white_space":{
      "parser":"token",
      "ignore_token":"true",
      "regex":"[\r\n\t ]+"
    }
  }
}